%% INTRODUCTION
% TITLE: Map and sensor plotting script
% PROJECT: Optimal heterogeneous WSN placements
% DATE: 6 AUG 24
% AUTHORS: J. Mockler
% DESC: This script creates "explore" placement figures for the associated
% sensor placement paper. 

close all; clear all

%% READ IN DATA AND PLOT MAP
% Import the map 
Map = readtable('GIS_terrain_resize.csv');
Map = table2array(Map);

% Plot the grid with pcolor and format
figure (1)
Map_plot = pcolor(Map);
Map_plot.FaceAlpha = 0.75;  
set(Map_plot, 'EdgeColor', 'none') % gets rid of checkerboard lines
set(gca, 'YDir','reverse') %flip y axis
hold on

% Create the colormap
% Row 1 == water, 2 == road, 3 == low veg, 4 == high veg, 5 == manmade
% Picked using the line below in the command window
% c = uisetcolor([1 1 0],'Select a color')
colorMap = [0,0.4471,0.7412; 
    0.5020    0.5020    0.5020; 
    0.8627    0.9608    0.7490;
    0.5725    0.7216    0.4745;
    0.8000,0.4000,0.4000];
colormap(colorMap)

% Import the target mesh
% TBH, I can't seem to find a convienent way to import and partition this
% data, so I just copied and pasted it in. 
% CASE 1
target_mesh = [39, 41; 39, 41; 39, 41; 39, 41; 39, 41; 39, 43; 41, 41; 
    41, 43; 41, 43; 41, 43; 41, 43; 41, 43; 43, 41; 43, 41; 43, 41; 
    43, 41; 43, 41; 43, 43; 43, 43; 43, 43; 43, 43; 43, 43; 45, 41; 
    45, 41; 45, 41; 45, 41; 45, 41; 45, 43; 45, 43; 45, 43; 45, 43; 
    45, 43; 47, 41; 47, 41; 47, 41; 47, 41; 47, 41; 47, 43; 47, 43; 
    47, 43; 47, 43; 47, 43; 49, 41; 49, 43; 51, 41; 51, 43; 41, 45; 
    41, 47; 43, 45; 43, 45; 43, 45; 43, 45; 43, 45; 43, 47; 45, 45; 
    45, 47; 47, 45; 47, 45; 47, 47; 49, 45; 49, 47; 49, 47; 51, 45; 
    51, 47; 51, 47; 43, 49; 45, 49; 47, 49; 47, 49; 49, 49; 51, 49; 
    51, 49; 53, 49; 55, 49; 49, 51; 51, 51; 53, 51; 53, 51; 55, 51; 
    53, 53; 53, 55; 55, 53; 55, 53; 55, 55; 57, 53; 57, 55; 57, 55; 
    57, 57; 57, 59; 59, 57; 59, 57; 59, 59; 61, 57; 61, 57; 61, 59];

% CASE 2
% target_mesh = [55, 35; 55, 37; 55, 39; 55, 41; 57, 33; 57, 33; 57, 35; 
%     57, 35; 57, 37; 57, 37; 57, 39; 57, 39; 57, 41; 57, 41; 59, 33; 
%     59, 35; 59, 37; 59, 39; 59, 39; 59, 41; 61, 33; 61, 35; 61, 35; 
%     61, 37; 61, 37; 63, 33; 63, 33; 63, 33; 63, 33; 63, 33; 63, 35; 
%     63, 35; 63, 35; 63, 35; 63, 35; 34, 28; 34, 30; 34, 30; 34, 30; 
%     34, 30; 34, 30; 36, 28; 36, 30; 36, 30; 38, 28; 38, 30; 38, 30; 
%     40, 28; 40, 28; 40, 30; 36, 32; 38, 32; 38, 32; 38, 32; 38, 32; 
%     38, 32; 40, 32; 42, 32; 40, 34; 40, 34; 40, 34; 40, 34; 40, 34; 
%     42, 34];

% Get the density
[target_locs_list, density] = mesh_density(target_mesh);

% Import the sensors
% Also can't read this in nicely. I just copied and pasted it in again
% cause it's not much data and can be cleaned easily.
% CASE 1
placement_step_1 = [63.623233555875956 49.52390133125314; 58.174591890070516 42.52344479752157; 42.594991096125604 56.18002788916856; 47.2927943511221 59.420228621893415]; 
placement_step_2 = [63.21988299009363 50.301701179412916; 41.62841105952802 55.718909428926395; 57.80425238524424 42.869635611693795; 46.9996883909076 58.33687905728023];

% CASE 2
%placement_step_1 = [54.85023263748876 46.29158784605503; 41.45345887247751 39.23412294537438; 47.45079211895719 33.7285994705387];
%placement_step_2 = [54.50633807634167 46.32458926798649; 40.44200985002967 39.33369424156855; 47.27705969369603 30.663117256901057];

% Import sensor characteristics
% From excel sheet
% CASE 1
sensor_type = ["radii" "radii" "radii" "bearing"];
% CASE 2
% sensor_type = ["radii" "bearing" "radii"];

% CASE 1
% First FIM data
FIMs_raw = [0.56888668 0.24034018;
 0.24034018 0.20229072; 0.56888668 0.24034018;
 0.24034018 0.20229072; 0.56888668 0.24034018;
 0.24034018 0.20229072; 0.56888668 0.24034018;
 0.24034018 0.20229072; 0.56888668 0.24034018;
 0.24034018 0.20229072; 0.59407882 0.26778493;
 0.26778493 0.25214068; 0.6269089  0.19586724;
 0.19586724 0.17834197; 0.66704441 0.21526481;
 0.21526481 0.22230753; 0.66704441 0.21526481;
 0.21526481 0.22230753; 0.66704441 0.21526481;
 0.21526481 0.22230753; 0.66704441 0.21526481;
 0.21526481 0.22230753; 0.66704441 0.21526481;
 0.21526481 0.22230753; 0.67147201 0.13788334;
 0.13788334 0.16259702; 0.67147201 0.13788334;
 0.13788334 0.16259702; 0.67147201 0.13788334;
 0.13788334 0.16259702; 0.67147201 0.13788334;
 0.13788334 0.16259702; 0.67147201 0.13788334;
 0.13788334 0.16259702; 0.72305421 0.14295183;
 0.14295183 0.20285683; 0.72305421 0.14295183;
 0.14295183 0.20285683; 0.72305421 0.14295183;
 0.14295183 0.20285683; 0.72305421 0.14295183;
 0.14295183 0.20285683; 0.72305421 0.14295183;
 0.14295183 0.20285683; 0.69716174 0.0712258 ;
 0.0712258  0.15878312; 0.69716174 0.0712258 ;
 0.0712258  0.15878312; 0.69716174 0.0712258 ;
 0.0712258  0.15878312; 0.69716174 0.0712258 ;
 0.0712258  0.15878312; 0.69716174 0.0712258 ;
 0.0712258  0.15878312; 0.75359167 0.05769852;
 0.05769852 0.19976436; 0.75359167 0.05769852;
 0.05769852 0.19976436; 0.75359167 0.05769852;
 0.05769852 0.19976436; 0.75359167 0.05769852;
 0.05769852 0.19976436; 0.75359167 0.05769852;
 0.05769852 0.19976436; 0.70145211 0.00276395;
 0.00276395 0.16821259; 0.70145211 0.00276395;
 0.00276395 0.16821259; 0.70145211 0.00276395;
 0.00276395 0.16821259; 0.70145211 0.00276395;
 0.00276395 0.16821259; 0.70145211 0.00276395;
 0.00276395 0.16821259;  0.75485273 -0.03041417;
 -0.03041417  0.21504336;  0.75485273 -0.03041417;
 -0.03041417  0.21504336;  0.75485273 -0.03041417;
 -0.03041417  0.21504336;  0.75485273 -0.03041417;
 -0.03041417  0.21504336;  0.75485273 -0.03041417;
 -0.03041417  0.21504336;  0.68545773 -0.06024742;
 -0.06024742  0.1892376 ;  0.72876159 -0.11128025;
 -0.11128025  0.24610224;  0.6536552  -0.11167345;
 -0.11167345  0.21756801;  0.68184559 -0.17757224;
 -0.17757224  0.28693341; 0.71100741 0.23698196;
 0.23698196 0.27481495; 0.75735342 0.26345601;
 0.26345601 0.33888514; 0.78429004 0.14544998;
 0.14544998 0.24813834; 0.78429004 0.14544998;
 0.14544998 0.24813834; 0.78429004 0.14544998;
 0.14544998 0.24813834; 0.78429004 0.14544998;
 0.14544998 0.24813834; 0.78429004 0.14544998;
 0.14544998 0.24813834; 0.8567523  0.14656514;
 0.14656514 0.29943889; 0.82283333 0.03467033;
 0.03467033 0.24385079; 0.90705182 0.00166388;
 0.00166388 0.29187049;  0.82151781 -0.0796018 ;
 -0.0796018   0.26430649;  0.82151781 -0.0796018 ;
 -0.0796018   0.26430649;  0.90223074 -0.14466067;
 -0.14466067  0.31783589;  0.78497901 -0.1826022 ;
 -0.1826022   0.30397699;  0.85244806 -0.27013162;
 -0.27013162  0.36607523;  0.85244806 -0.27013162;
 -0.27013162  0.36607523;  0.7250657  -0.26485159;
 -0.26485159  0.35200791;  0.77670698 -0.36130475;
 -0.36130475  0.41959817;  0.77670698 -0.36130475;
 -0.36130475  0.41959817; 0.93977384 0.14762642;
 0.14762642 0.36038077;  1.00401545 -0.0427218 ;
 -0.0427218   0.34975972;  0.99086598 -0.22508465;
 -0.22508465  0.3849773 ;  0.99086598 -0.22508465;
 -0.22508465  0.3849773 ;  0.92096046 -0.36966437;
 -0.36966437  0.44443624;  0.82029088 -0.46065667;
 -0.46065667  0.50648149;  0.82029088 -0.46065667;
 -0.46065667  0.50648149;  0.7147374  -0.49291047;
 -0.49291047  0.55248296;  0.61898734 -0.47025541;
 -0.47025541  0.57504689;  0.97367938 -0.47283863;
 -0.47283863  0.55738179;  0.8389324  -0.55569721;
 -0.55569721  0.62874119;  0.70087737 -0.56279535;
 -0.56279535  0.67915639;  0.70087737 -0.56279535;
 -0.56279535  0.67915639;  0.58005727 -0.51475129;
 -0.51475129  0.70047133;  0.64666925 -0.59963295;
 -0.59963295  0.8434617 ;  0.5448666  -0.56366091;
 -0.56366091  1.0417874 ;  0.51595126 -0.52132044;
 -0.52132044  0.84321135;  0.51595126 -0.52132044;
 -0.52132044  0.84321135;  0.4276182  -0.45723135;
 -0.45723135  0.99358164;  0.41863729 -0.43122859;
 -0.43122859  0.81402339;  0.35177779 -0.35841633;
 -0.35841633  0.92007888;  0.35177779 -0.35841633;
 -0.35841633  0.92007888;  0.28855219 -0.22030561;
 -0.22030561  1.00049938;  0.25732036 -0.03813957;
 -0.03813957  1.02205496;  0.25091965 -0.1555761 ;
 -0.1555761   0.89614721;  0.25091965 -0.1555761 ;
 -0.1555761   0.89614721;  0.22440461 -0.01305138;
 -0.01305138  0.91168248;  0.21581598 -0.10115273;
 -0.10115273  0.80906852;  0.21581598 -0.10115273;
 -0.10115273  0.80906852; 0.19145785 0.00989444;
 0.00989444 0.82284634];

% Second FIMs data
FIMs_raw_2nd=[0.52232031 0.24098335;
 0.24098335 0.27140852; 0.52232031 0.24098335;
 0.24098335 0.27140852; 0.52232031 0.24098335;
 0.24098335 0.27140852; 0.52232031 0.24098335;
 0.24098335 0.27140852; 0.52232031 0.24098335;
 0.24098335 0.27140852; 0.53650844 0.25789377;
 0.25789377 0.32593906; 0.58322952 0.20278313;
 0.20278313 0.25402965; 0.61132504 0.21200627;
 0.21200627 0.30452763; 0.61132504 0.21200627;
 0.21200627 0.30452763; 0.61132504 0.21200627;
 0.21200627 0.30452763; 0.61132504 0.21200627;
 0.21200627 0.30452763; 0.61132504 0.21200627;
 0.21200627 0.30452763; 0.63330223 0.15050559;
 0.15050559 0.24423802; 0.63330223 0.15050559;
 0.15050559 0.24423802; 0.63330223 0.15050559;
 0.15050559 0.24423802; 0.63330223 0.15050559;
 0.15050559 0.24423802; 0.63330223 0.15050559;
 0.15050559 0.24423802; 0.67277948 0.14528818;
 0.14528818 0.29259844; 0.67277948 0.14528818;
 0.14528818 0.29259844; 0.67277948 0.14528818;
 0.14528818 0.29259844; 0.67277948 0.14528818;
 0.14528818 0.29259844; 0.67277948 0.14528818;
 0.14528818 0.29259844; 0.66646543 0.08838007;
 0.08838007 0.24619258; 0.66646543 0.08838007;
 0.08838007 0.24619258; 0.66646543 0.08838007;
 0.08838007 0.24619258; 0.66646543 0.08838007;
 0.08838007 0.24619258; 0.66646543 0.08838007;
 0.08838007 0.24619258; 0.71138615 0.06313628;
 0.06313628 0.29684267; 0.71138615 0.06313628;
 0.06313628 0.29684267; 0.71138615 0.06313628;
 0.06313628 0.29684267; 0.71138615 0.06313628;
 0.06313628 0.29684267; 0.71138615 0.06313628;
 0.06313628 0.29684267; 0.679203   0.02336855;
 0.02336855 0.26174104; 0.679203   0.02336855;
 0.02336855 0.26174104; 0.679203   0.02336855;
 0.02336855 0.26174104; 0.679203   0.02336855;
 0.02336855 0.26174104; 0.679203   0.02336855;
 0.02336855 0.26174104;  0.7214426  -0.02491588;
 -0.02491588  0.32056379;  0.7214426  -0.02491588;
 -0.02491588  0.32056379;  0.7214426  -0.02491588;
 -0.02491588  0.32056379;  0.7214426  -0.02491588;
 -0.02491588  0.32056379;  0.7214426  -0.02491588;
 -0.02491588  0.32056379;  0.67197078 -0.03623479;
 -0.03623479  0.2892698 ;  0.7030208  -0.10797506;
 -0.10797506  0.36218682;  0.64984327 -0.0823634 ;
 -0.0823634   0.32317173;  0.66180626 -0.17714361;
 -0.17714361  0.41569069; 0.64149169 0.22123778;
 0.22123778 0.36101072; 0.6710189  0.23264279;
 0.23264279 0.42625254; 0.72025016 0.13623431;
 0.13623431 0.34299115; 0.72025016 0.13623431;
 0.13623431 0.34299115; 0.72025016 0.13623431;
 0.13623431 0.34299115; 0.72025016 0.13623431;
 0.13623431 0.34299115; 0.72025016 0.13623431;
 0.13623431 0.34299115; 0.77481814 0.1260951 ;
 0.1260951  0.3970823 ; 0.76900164 0.0278928 ;
 0.0278928  0.34590322;  0.83933422 -0.01368714;
 -0.01368714  0.39446276;  0.77974669 -0.08994083;
 -0.08994083  0.37405134;  0.77974669 -0.08994083;
 -0.08994083  0.37405134;  0.85383958 -0.16522088;
 -0.16522088  0.42325251;  0.75426138 -0.20190258;
 -0.20190258  0.42342474;  0.82268262 -0.30428121;
 -0.30428121  0.47571208;  0.82268262 -0.30428121;
 -0.30428121  0.47571208;  0.7045045  -0.2968808 ;
 -0.2968808   0.48167364;  0.76598229 -0.41101346;
 -0.41101346  0.53146731;  0.76598229 -0.41101346;
 -0.41101346  0.53146731; 0.83047795 0.11708652;
 0.11708652 0.46157393;  0.91571904 -0.05728456;
 -0.05728456  0.4507321 ;  0.93583822 -0.24395719;
 -0.24395719  0.47757247;  0.93583822 -0.24395719;
 -0.24395719  0.47757247;  0.89410367 -0.40632097;
 -0.40632097  0.53382388;  0.81729292 -0.51072634;
 -0.51072634  0.59376811;  0.81729292 -0.51072634;
 -0.51072634  0.59376811;  0.74164416 -0.54133755;
 -0.54133755  0.62640679;  0.68288369 -0.49504002;
 -0.49504002  0.62171873;  0.95255941 -0.50383355;
 -0.50383355  0.61473991;  0.83679452 -0.59752742;
 -0.59752742  0.6892875 ;  0.72364933 -0.59123541;
 -0.59123541  0.73090796;  0.72364933 -0.59123541;
 -0.59123541  0.73090796;  0.63206971 -0.51374161;
 -0.51374161  0.7327842 ;  0.65849075 -0.60382863;
 -0.60382863  0.87136595;  0.54888077 -0.53206131;
 -0.53206131  1.03351049;  0.55871122 -0.49617579;
 -0.49617579  0.85242589;  0.55871122 -0.49617579;
 -0.49617579  0.85242589;  0.47337064 -0.40638848;
 -0.40638848  0.96191455;  0.48168192 -0.38033347;
 -0.38033347  0.80995814;  0.42147152 -0.29591984;
 -0.29591984  0.87767274;  0.42147152 -0.29591984;
 -0.29591984  0.87767274;  0.37488621 -0.15394671;
 -0.15394671  0.90908451; 0.36207522 0.01307118;
 0.01307118 0.88292987;  0.34151904 -0.08687098;
 -0.08687098  0.81444364;  0.34151904 -0.08687098;
 -0.08687098  0.81444364; 0.32539972 0.04114902;
 0.04114902 0.79614083;  0.30136288 -0.02848979;
 -0.02848979  0.74043233;  0.30136288 -0.02848979;
 -0.02848979  0.74043233; 0.28350154 0.0682498 ;
 0.0682498  0.72883872];

% CASE 2
% First FIM data
% FIMs_raw = [0.24785498 -0.00909876;
%  -0.00909876  1.14985192; 0.32984836 0.1933254 ;
%  0.1933254  1.06537069; 0.444815   0.32336843;
%  0.32336843 0.92324917; 0.5513809  0.39003708;
%  0.39003708 0.77135622;  0.19448714 -0.21206199;
%  -0.21206199  1.04672445;  0.19448714 -0.21206199;
%  -0.21206199  1.04672445;  0.18838977 -0.0380492 ;
%  -0.0380492   1.07297318;  0.18838977 -0.0380492 ;
%  -0.0380492   1.07297318; 0.23804233 0.11994748;
%  0.11994748 1.02312909; 0.23804233 0.11994748;
%  0.11994748 1.02312909; 0.31760533 0.23281545;
%  0.23281545 0.92461436; 0.31760533 0.23281545;
%  0.23281545 0.92461436; 0.39680312 0.29454101;
%  0.29454101 0.81121571; 0.39680312 0.29454101;
%  0.29454101 0.81121571;  0.14659475 -0.1846866 ;
%  -0.1846866   0.98007066;  0.13846137 -0.0500496 ;
%  -0.0500496   1.00365352; 0.16664507 0.07623856;
%  0.07623856 0.97573796; 0.2167816  0.17549637;
%  0.17549637 0.91131521; 0.2167816  0.17549637;
%  0.17549637 0.91131521; 0.26854734 0.24248543;
%  0.24248543 0.83255118;  0.10836927 -0.15930592;
%  -0.15930592  0.9178083 ;  0.09883362 -0.05076728;
%  -0.05076728  0.93908889;  0.09883362 -0.05076728;
%  -0.05076728  0.93908889; 0.11401444 0.0539689 ;
%  0.0539689  0.9239624 ; 0.11401444 0.0539689 ;
%  0.0539689  0.9239624 ;  0.07904415 -0.13577828;
%  -0.13577828  0.85892014;  0.07904415 -0.13577828;
%  -0.13577828  0.85892014;  0.07904415 -0.13577828;
%  -0.13577828  0.85892014;  0.07904415 -0.13577828;
%  -0.13577828  0.85892014;  0.07904415 -0.13577828;
%  -0.13577828  0.85892014;  0.06933208 -0.04544653;
%  -0.04544653  0.8775243 ;  0.06933208 -0.04544653;
%  -0.04544653  0.8775243 ;  0.06933208 -0.04544653;
%  -0.04544653  0.8775243 ;  0.06933208 -0.04544653;
%  -0.04544653  0.8775243 ;  0.06933208 -0.04544653;
%  -0.04544653  0.8775243 ; 0.39295403 0.43480636;
%  0.43480636 0.67653252; 0.32949271 0.4068481 ;
%  0.4068481  0.7972022 ; 0.32949271 0.4068481 ;
%  0.4068481  0.7972022 ; 0.32949271 0.4068481 ;
%  0.4068481  0.7972022 ; 0.32949271 0.4068481 ;
%  0.4068481  0.7972022 ; 0.32949271 0.4068481 ;
%  0.4068481  0.7972022 ; 0.51145219 0.4694597 ;
%  0.4694597  0.64457894; 0.44785514 0.45000474;
%  0.45000474 0.7808624 ; 0.44785514 0.45000474;
%  0.45000474 0.7808624 ; 0.65382197 0.4855468 ;
%  0.4855468  0.59061585; 0.59370216 0.47205483;
%  0.47205483 0.74204327; 0.59370216 0.47205483;
%  0.47205483 0.74204327; 0.81628347 0.47390589;
%  0.47390589 0.51396933; 0.81628347 0.47390589;
%  0.47390589 0.51396933; 0.75615822 0.46345985;
%  0.46345985 0.68663085; 0.37588175 0.39895318;
%  0.39895318 0.91968404; 0.52966179 0.41887006;
%  0.41887006 0.89334202; 0.52966179 0.41887006;
%  0.41887006 0.89334202; 0.52966179 0.41887006;
%  0.41887006 0.89334202; 0.52966179 0.41887006;
%  0.41887006 0.89334202; 0.52966179 0.41887006;
%  0.41887006 0.89334202; 0.69501998 0.38425436;
%  0.38425436 0.85835687; 0.82251125 0.3088574 ;
%  0.3088574  0.85500919; 0.6831523 0.2563598;
%  0.2563598 0.973333 ; 0.6831523 0.2563598;
%  0.2563598 0.973333 ; 0.6831523 0.2563598;
%  0.2563598 0.973333 ; 0.6831523 0.2563598;
%  0.2563598 0.973333 ; 0.6831523 0.2563598;
%  0.2563598 0.973333 ; 0.80531085 0.04136855;
%  0.04136855 0.99440505];
% 
% % Second FIMs data
% FIMs_raw_2nd=[0.37543008 0.18511498;
%  0.18511498 0.9413577 ; 0.46729013 0.2670784 ;
%  0.2670784  0.82176553; 0.54084689 0.310143  ;
%  0.310143   0.70738123; 0.59582855 0.32912506;
%  0.32912506 0.60266213; 0.21098518 0.00831578;
%  0.00831578 0.99337137; 0.21098518 0.00831578;
%  0.00831578 0.99337137; 0.27013142 0.13160057;
%  0.13160057 0.9286388 ; 0.27013142 0.13160057;
%  0.13160057 0.9286388 ; 0.3415237  0.21399901;
%  0.21399901 0.83691208; 0.3415237  0.21399901;
%  0.21399901 0.83691208; 0.40609637 0.26005456;
%  0.26005456 0.74037554; 0.40609637 0.26005456;
%  0.26005456 0.74037554; 0.45340281 0.27795284;
%  0.27795284 0.65244488; 0.45340281 0.27795284;
%  0.27795284 0.65244488;  0.15581986 -0.01002217;
%  -0.01002217  0.9404214 ; 0.19376376 0.09496912;
%  0.09496912 0.89874899; 0.24472484 0.17307481;
%  0.17307481 0.83217291; 0.29416766 0.2238725 ;
%  0.2238725  0.7570888 ; 0.29416766 0.2238725 ;
%  0.2238725  0.7570888 ; 0.33114306 0.25350838;
%  0.25350838 0.68640033;  0.11422598 -0.01738574;
%  -0.01738574  0.88655715; 0.13839855 0.07262871;
%  0.07262871 0.85950559; 0.13839855 0.07262871;
%  0.07262871 0.85950559; 0.17420348 0.14546508;
%  0.14546508 0.81120658; 0.17420348 0.14546508;
%  0.14546508 0.81120658;  0.08330781 -0.01835373;
%  -0.01835373  0.83328145;  0.08330781 -0.01835373;
%  -0.01835373  0.83328145;  0.08330781 -0.01835373;
%  -0.01835373  0.83328145;  0.08330781 -0.01835373;
%  -0.01835373  0.83328145;  0.08330781 -0.01835373;
%  -0.01835373  0.83328145; 0.09898426 0.05966454;
%  0.05966454 0.81512632; 0.09898426 0.05966454;
%  0.05966454 0.81512632; 0.09898426 0.05966454;
%  0.05966454 0.81512632; 0.09898426 0.05966454;
%  0.05966454 0.81512632; 0.09898426 0.05966454;
%  0.05966454 0.81512632; 0.36538261 0.33787214;
%  0.33787214 0.74976135; 0.33036174 0.28275411;
%  0.28275411 0.83216403; 0.33036174 0.28275411;
%  0.28275411 0.83216403; 0.33036174 0.28275411;
%  0.28275411 0.83216403; 0.33036174 0.28275411;
%  0.28275411 0.83216403; 0.33036174 0.28275411;
%  0.28275411 0.83216403; 0.46530436 0.35227431;
%  0.35227431 0.74435741; 0.43863583 0.28599188;
%  0.28599188 0.83073175; 0.43863583 0.28599188;
%  0.28599188 0.83073175; 0.57366211 0.35021193;
%  0.35021193 0.73450284; 0.5544941  0.25473637;
%  0.25473637 0.82725793; 0.5544941  0.25473637;
%  0.25473637 0.82725793; 0.68275302 0.33683042;
%  0.33683042 0.72497524; 0.68275302 0.33683042;
%  0.33683042 0.72497524; 0.65183741 0.18704218;
%  0.18704218 0.84417825; 0.42746279 0.21492191;
%  0.21492191 0.8926263 ; 0.57924518 0.15389478;
%  0.15389478 0.86595963; 0.57924518 0.15389478;
%  0.15389478 0.86595963; 0.57924518 0.15389478;
%  0.15389478 0.86595963; 0.57924518 0.15389478;
%  0.15389478 0.86595963; 0.57924518 0.15389478;
%  0.15389478 0.86595963; 0.71154976 0.01037544;
%  0.01037544 0.85799801;  0.77935652 -0.19620215;
%  -0.19620215  0.90613653;  0.84319524 -0.1046352 ;
%  -0.1046352   0.78771301;  0.84319524 -0.1046352 ;
%  -0.1046352   0.78771301;  0.84319524 -0.1046352 ;
%  -0.1046352   0.78771301;  0.84319524 -0.1046352 ;
%  -0.1046352   0.78771301;  0.84319524 -0.1046352 ;
%  -0.1046352   0.78771301;  0.96009022 -0.38331269;
%  -0.38331269  0.77627606];

% Parse out data - needs odd formatting appropriately save data
for i = 0:length(FIMs_raw(:,1))/2 - 1
    FIMs(1,:,i+1) = FIMs_raw(1+2*i,:);
    FIMs(2,:,i+1) = FIMs_raw(2+2*i,:);
end

% Parse out data - needs odd formatting appropriately save data
for i = 0:length(FIMs_raw(:,1))/2 - 1
    FIMs2(1,:,i+1) = FIMs_raw_2nd(1+2*i,:);
    FIMs2(2,:,i+1) = FIMs_raw_2nd(2+2*i,:);
end

%% PLOTTING

% Plot the first placement
% for i = 1:length(placement_step_1(:,1))
%     if strcmp(sensor_type(i),'radii')
%         plot(placement_step_1(i, 1)+1, placement_step_1(i,2)+1, ...
%             'o', 'color', "#0072BD", 'MarkerSize', 9, "LineWidth", 1.5)
% 
%     elseif strcmp(sensor_type(i),'bearing')
%         plot(placement_step_1(i, 1)+1, placement_step_1(i,2)+1, ...
%             'o', 'color', "#EDB120",'MarkerSize', 9, "LineWidth", 1.5)
%     end
% end

% Plot the second placement
for i = 1:length(placement_step_2(:,1))
    if strcmp(sensor_type(i),'radii')
        plot(placement_step_2(i, 1)+1, placement_step_2(i,2)+1, ...
            'x', 'color', "#0072BD", 'MarkerSize', 9, "LineWidth", 1.5)
    
    elseif strcmp(sensor_type(i),'bearing')
        plot(placement_step_2(i, 1)+1, placement_step_2(i,2)+1, ...
            'x', 'color', "#EDB120", 'MarkerSize', 9, "LineWidth", 1.5)
    end
end

% Plot the target mesh points
for i = 1:length(target_locs_list(:,1))
    if density(i) == 1
        target_plot_style = 'g^';
    elseif density(i) == 2
        target_plot_style = 'k^';
    elseif density(i) == 5
        target_plot_style = 'r^';
    end
    % offset plot by 0.5 to center it on the square!
    % Add one to compensate for python / matlab indexing diffs
    % Turn off legend entry
    plot(target_locs_list(i, 1)+1.5, target_locs_list(i,2)+1.5, ...
        target_plot_style,'HandleVisibility','off')
end

% Uncomment below for uncert ellipse plots

% Plot the uncertainty ellipses!

% Define some list of targets you want to plot for
% CASE 1
target_plot_list = [39 41; 41 45; 43 49; 47 49; 49 51; 53 53; 59 59; 57 57; 61 59; 61 57; 57 53; 55 49; 51 47; 51 43; 51 41; 47 41; 43 41; 45 45; 47 47];
% CASE 2
% target_plot_list = [34, 28; 38, 28; 34, 30; 36, 30; 40, 30; 36, 32; 42, 32; 42, 34; 40, 34; 55, 41; 59, 41; 55, 37; 61, 37; 55, 35; 59, 35; 63, 35; 57, 33; 61, 33; 64, 33];

% For ALL of them, just define the target plot list as
% target_plot_list = target_locs_list;

% for i = 1:length(FIMs(1,1,:))
%     % Check if target is in plot list
%     target = target_mesh(i,:);
%     if ismember(target, target_plot_list, 'rows')
%         % Plot the FIRST FIM
%         FIM = FIMs(:,:,i);
%         % compensate for indexing and formatting
%         target(1) = target(1) + 1.5; target(2) = target(2) + 1.5;
%         plot_vecs = plot_uncertainty_ellipse_vector(FIM, target);
%         if i == 1
%             plot(plot_vecs(1,:), plot_vecs(2, :), '--', 'color', [0.25 0.25 0.25])
%         end
%         plot(plot_vecs(1,:), plot_vecs(2, :), '--', 'color', [0.25 0.25 0.25], 'HandleVisibility','off')
% 
%         % Then the second FIM
%         FIM2 = FIMs2(:,:,i);
%         plot_vecs = plot_uncertainty_ellipse_vector(FIM2, target);
%         if i == 1
%             plot(plot_vecs(1,:), plot_vecs(2, :), '-k', 'LineWidth', 0.75)
%         end
%         plot(plot_vecs(1,:), plot_vecs(2, :), '-k', 'LineWidth', 0.75,'HandleVisibility','off')
%     end
% end

% Make this match with the plot!

% CASE 1
% legend("", "Trace Obj. - Dist.", "", "", "Trace Obj. - AoA.", "MOO - Dist.", "", "", ...
%     "MOO - AoA", "Tr. - 95\% Confid", "MOO - 95\% Confid", 'Interpreter', 'latex')

% CASE 2
%legend("", "Trace Obj. Dist.", "Trace Obj. AoA", "", "Tr+Det - Dist.", ...
%   "Tr + Det AoA", "", "Tr Uncertainty", "Tr+Det Uncertainty", ...
%   'Interpreter', 'latex')

%% ADD CONSTRAINTS!

for i = 1:length(placement_step_2(:,1))
    %Add WSN radii
    sensor = [placement_step_2(i, 1)+1, placement_step_2(i,2)+1];
    plot_vecs = plot_wsn_radii(sensor, 0.4*50);
    if strcmp(sensor_type(i),'radii')
        plot(plot_vecs(1,:), plot_vecs(2, :), '--','color', "#0072BD",'HandleVisibility','off')
    elseif strcmp(sensor_type(i),'bearing')
        plot(plot_vecs(1,:), plot_vecs(2, :), '--','color', "#EDB120",'HandleVisibility','off')
    end

    % Add min distance line
    sensor = [placement_step_2(i, 1), placement_step_2(i,2)];
    [min_dist, min_target] = min_dist_calcs(sensor, target_locs_list);
    xcplt = [sensor(1)+1, min_target(1)+1.5]; 
    ycplt = [sensor(2)+1, min_target(2)+1.5];
    plot(xcplt, ycplt, '-k')
    % Uncomment to add text, although I think we should do this in
    % post-processing rather than on here...
    %plt_text = ["Min Target Dist", string(min_dist)];
    %text(mean(xcplt), mean(ycplt),plt_text)
end

% Add min sensor-sensor line
min_s_dist = 100;
sens1 = [1,1]; sens2 = [1,1];
for i = 1:length(placement_step_2(:,1))
    sens_i = [placement_step_2(i, 1), placement_step_2(i,2)];
    for j = 1:length(placement_step_2(:,1))
        if i == j
            continue;
        else
            sens_j = [placement_step_2(j, 1), placement_step_2(j,2)];
            dist = norm(sens_i - sens_j, 2);
            if dist < min_s_dist
                min_s_dist = dist;
                sens1 = sens_i;
                sens2 = sens_j;
            end
        end
    end
end

xcplt = [sens1(1)+1, sens2(1)+1]; 
ycplt = [sens1(2)+1, sens2(2)+1];
plot(xcplt, ycplt, '-k')
% Uncomment to add text, although I think we should do this in
% post-processing rather than on here...
%plt_text = ["Min Sens-Sens Dist", string(min_s_dist)];
%text(mean(xcplt), mean(ycplt), plt_text)


%% PLOT FORMATTING
xlabel('Longitude','Interpreter', 'latex') 
ylabel('Latitude','Interpreter', 'latex')
set(gca,'TickLabelInterpreter','latex')
% CASE 1
title('Optimal Exploration Placements - Case I','Interpreter', 'latex', 'Fontsize', 13)
xlim([35, 70]); ylim([35, 65])
% CASE 2
%title('Optimal Exploration Placements - Case II','Interpreter', 'latex', 'Fontsize', 13)
%xlim([30, 70]); ylim([25, 50])


